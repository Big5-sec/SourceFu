<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="Nicolas Zilio">
    <link rel="stylesheet" href="/js/codemirror.css">
    <link rel="stylesheet" href="/material.css">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" crossorigin="anonymous">
    <link rel="stylesheet" href="https://unpkg.com/mermaid@7.0.0/dist/mermaid.dark.css" crossorigin="anonymous">
    <link href="/test_css.css" rel="stylesheet">
    <link href="/js/merge.css" rel="stylesheet">
    <link href="/js/prism.css" rel="stylesheet">
    <title>SourceFu: work view</title>
  </head>
  <body style="font-size:0.8rem">
    <nav class="navbar navbar-dark static-top bg-dark p-0 flex-md-nowrap">
      <a class="navbar-brand col-sm-3 col-md-2 ml-2" href="/">SourceFu</a>
    </nav>
    <main role="main" class="mt-4 ml-sm-5 mr-sm-5">
      <ul class="nav nav-tabs" role="tablist" id="maintabs">
        <li class="nav-item">
          <a class="nav-link active" id="view-tab" data-target="#view" data-toggle="tab" href="#view" role="tab" aria-controls="view" aria-selected="true">Overview</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" id="work-tab" data-target="#work" data-toggle="tab" href="#work" role="tab" aria-controls="work" aria-selected="false">Work View</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" id="step-tab" data-target="#steps" data-toggle="tab" href="#steps" role="tab" aria-controls="steps" aria-selected="false">Steps</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" id="step-tab" data-target="#diff" data-toggle="tab" href="#diff" role="tab" aria-controls="steps" aria-selected="false">Diff View</a>
        </li>
      </ul>

      <!--overview pane-->

      <div class="tab-content">
        <div id="view" class="tab-pane fade show active" role="tabpanel" aria-labelledby="view-tab">
          <br>
          <h4>File Information</h4>
          <table class="table table-bordered">
            <tbody>
              <tr>
                <th>filename</th>
                <td>$analysis_filename</td>
                <th>current step</th>
                <td>$current_step.name</td>
                <th>language</th>
                <td>$analysis_language</td>
              </tr>
              <tr>
                <th>SHA-512</th>
                <td colspan="3">to be done...</td>
              </tr>
            </tbody>
          </table>
          
          <h4>Original</h4>
          #if($analysis_language == "VBA")
          <pre class="pre-scrollable line-numbers"><code class="language-visual-basic">$original</code></pre>
          #else
          <pre class="pre-scrollable line-numbers"><code class="language-javascript">$original</code></pre>
          #end
          <h4>Deobfuscated</h4>
          #if ( ! $deobfuscated )
          <pre><code class="language-javascript">no step set as deobfuscated point</code></pre>
          #else
              #if($analysis_language == "VBA")
              <pre class="pre-scrollable line-numbers"><code class="language-visual-basic">$deobfuscated</code></pre>
              #else
              <pre class="pre-scrollable line-numbers"><code class="language-javascript">$deobfuscated</code></pre>
              #end
          #end
          <h4>Current step</h4>
          #if($analysis_language == "VBA")
          <pre class="pre-scrollable line-numbers"><code class="language-visual-basic">$current_step_code</code></pre>
          #else
          <pre class="pre-scrollable line-numbers"><code class="language-javascript">$current_step_code</code></pre>
          #end
        </div>


        <!--work pane -->

        <div id="work" class="tab-pane fade" role="tabpanel" aria-labelledby="work-tab">
          <br>
          <div class="row justify-content-between">
            #if (! $steps_name)
            <div class="col-4">
              <p>no step to load</pa>
            </div>
              #else
              <div class="col-4">
              <select id="step-list">
                #foreach ($step_name in $steps_name)
                <option value="$step_name">$step_name</option>
                #end
              </select>
              <a href="#" onclick="loadStep()">load step</a>
              </div>
              #end
              <div class="col-4">
                <div class="form-group row">
                  <input type="text" id="new-step-name" class="form-control col-sm-9 form-control-sm" placeholder="step name"/>                 
                  <a href="#" onclick="setNewStep()" class="col-sm-3 col-form-label col-form-label-sm">new step</a>
                </div>
              </div>
          </div>

          <textarea id="workpane">$current_step_code</textarea>
          <br>
          
          <h4>operations</h4>
          #if($analysis_language == "VBA")
          <form class="mt-4" onsubmit="newOperation()">
            <div class="form-group row">
              <label for="operation-select" class="col-form-label col-sm-1">Select the operation to run:</label>
              <div class="col-sm-6">
                <select class="form-control form-control-sm" id="operation-select">
                  <option>delete comments</option>
                  <option>rename variables (based on scope)</option>
                  <option>dead code elimination</option>
                  <option>beautify</option>
                  <option>empty blocks removal</option>
                  <option>expressions evaluation</option>
                  <option>cfg simplifications</option>
                  <option>full analysis</option>
                </select>
              </div>
            </div>
            <div class="form-check">
              <input class="form-check-input" type="checkbox" value="" id="operation-save-step">
              <label class="form-check-label" for="operation-save-step">
                 automatically set the result of the operation as a new step?
              </label>
            </div>
            <button type="submit" value="submit" class="btn btn-primary float-right">Launch</button>
          </form>
          #else
          <form class="mt-4" onsubmit="newOperation()">
            <div class="form-group row">
              <label for="operation-select" class="col-form-label col-sm-1">Select the operation to run:</label>
              <div class="col-sm-6">
                <select class="form-control form-control-sm" id="operation-select">
                  <!-- <option>delete comments</option> -->
                  <option>rename variables (based on scope)</option>
                  <!-- <option>dead code elimination</option> -->
                  <!-- <option>beautify</option> -->
                  <!-- <option>empty blocks removal</option> -->
                  <!-- <option>expressions evaluation</option> -->
                  <!-- <option>cfg simplifications</option> -->
                  <!-- <option>full analysis</option> -->
                </select>
              </div>
            </div>
            <div class="form-check">
              <input class="form-check-input" type="checkbox" value="" id="operation-save-step">
              <label class="form-check-label" for="operation-save-step">
                 automatically set the result of the operation as a new step?
              </label>
            </div>
            <button type="submit" value="submit" class="btn btn-primary float-right">Launch</button>
          </form>
          #end
          <br><br><br>
          <div id="output123"></div>
        </div>

        <!--steps pane-->        
        <div id="steps" class="tab-pane fade" role="tabpanel" aria-labelledby="step-tab">
          <small>This tab is currently a work in progress. The future idea will be to be able to select steps to work on, and to see what transformations have been done on the code from one step to another.</small>
         <div id="mermaid-svg">
         </div>
        </div>

        <!--diff pane-->        
        <div id="diff" class="tab-pane fade" role="tabpanel" aria-labelledby="step-tab">
          <small>
            This tab might disappear. The idea is to be able to have a diff view between 2 steps in the code. In fact, it's here because of the use of code mirror: this feature appeared quite interesting, so let's test it :) in future...
          </small>
          
          <div id="viewmerge"></div>
        </div>

        
      </div>



      <div class="modal fade" id="my-popup" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
          <div class="modal-content">
            <div class="modal-header" style="background:#e85e6c;">
              <h5 class="modal-title" id="message-label">Error</h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
              </button>
            </div>
            <div class="modal-body" id="my-message">
              there was an error.
            </div>
          </div>
        </div>
      </div>



      

      
    </main>
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"  crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"  crossorigin="anonymous"></script>
    <script src="https://unpkg.com/mermaid@7.0.0/dist/mermaidAPI.js" crossorigin="anonymous"></script>
    <script src="/js/codemirror.js"></script>
    <script src="/js/prism.js"></script>
    <script src="/js/xml.js"></script>
    <script src="/js/javascript.js"></script>
     <script src="/js/vb.js"></script>
    <script src="/hehe_fichiers/diff_match_patch.js"></script>
    <script src="/hehe_fichiers/merge.js"></script>
    <script>
      var analysisId = "$analysisId";
      var mainEditor;
      var opeEditor;
      var mergeEditor;
      var lastOperation;
      function initMainCodeEditor(){
      if(mainEditor instanceof CodeMirror){
				mainEditor.refresh();
		  } else {
        // Load main editor
        var el = document.getElementById("workpane");    
        mainEditor = CodeMirror.fromTextArea(el, {
          lineNumbers: true,
      theme: "material",
      #if($analysis_language == "VBA")
      mode: "vb"
      #else
      mode: "javascript"
      #end
      });
      mainEditor.setSize("100%",$(window).height()/2);
      }
      }

      $(document).ready(function(){
      mermaidAPI.initialize({startOnLoad:false, cloneCssStyles:false});
        
      // Only load editors if tab has been clicked
      $('#maintabs > li > a[data-target="#work"]').on('shown.bs.tab', function(e){
        initMainCodeEditor();
      });

      $('#maintabs > li > a[data-target="#steps"]').on('shown.bs.tab', function(e){
          var element = document.querySelector("#mermaid-svg");

          var insertSvg = function(svgCode, bindFunctions){
            element.innerHTML = svgCode;
      };

      var graphdefinition = "graph LR\nA --- B\nB-->C[fa:fa-ban forbidden]\nB-->D(fa:fa-spinner);"
      
          mermaidAPI.render('mermaid-svg',graphdefinition,insertSvg);
      })

       // Only load editors if tab has been clicked
      $('#maintabs > li > a[data-target="#diff"]').on('shown.bs.tab', function(e){
        see();
      })
      
    });
             
var value, orig1, orig2, dv, hilight= true;
      function initUI(panes) {
  if (value == null) return;
      var target = document.getElementById("viewmerge");
  target.innerHTML = "";
  mergeEditor = CodeMirror.MergeView(target, {
    value: value,
    origLeft: panes == 3 ? orig1 : null,
    orig: orig2,
    lineNumbers: true,
    mode: "text/html",
    highlightDifferences: hilight
      });
      console.log(mergeEditor.constructor.name);
}

      function see() {
      if( mergeEditor && mergeEditor !== "null" && mergeEditor !== "undefined" ){
      return;
		  } else {
  value = document.documentElement.innerHTML;
  orig1 = value.replace(/\.\.\//g, "codemirror/").replace("yellow", "orange");
  orig2 = value.replace(/\u003cscript/g, "\u003cscript type=text/javascript ")
    .replace("white", "purple;\n      font: comic sans;\n      text-decoration: underline;\n      height: 15em");
  initUI(2);}
};

function mergeViewHeight(mergeView) {
  function editorHeight(editor) {
    if (!editor) return 0;
    return editor.getScrollInfo().height;
  }
  return Math.max(editorHeight(mergeView.leftOriginal()),
                  editorHeight(mergeView.editor()),
                  editorHeight(mergeView.rightOriginal()));
}

function resize(mergeView) {
  var height = mergeViewHeight(mergeView);
  for(;;) {
    if (mergeView.leftOriginal())
      mergeView.leftOriginal().setSize(null, height);
    mergeView.editor().setSize(null, height);
    if (mergeView.rightOriginal())
      mergeView.rightOriginal().setSize(null, height);

    var newHeight = mergeViewHeight(mergeView);
    if (newHeight >= height) break;
    else height = newHeight;
  }
  mergeView.wrap.style.height = height + "px";
      }


//the following are editor functions


//this function permits to gather the code within the editor of the web page
function gatherCode() {      
    return mainEditor.getValue();
}

//function setting a new step for the analysis
// it gathers the value of the text area next to the "new step" link
// then realizes some fetch to update the internal status of the analysis
// finally, the list of steps for select is updated. 
function setNewStep() {
    var stepName = $.trim($('#new-step-name').val());
    if (stepName == ''){
        $('#my-message')[0].innerHTML = "cannot set a new step with an empty name"
        $("#my-popup").modal();
        return;
    }
    var stepCode = gatherCode();
    var data = new FormData();
    data.append('code', stepCode);
    data.append('name',stepName);
    data.append('analysisId',analysisId);
    fetch('/api/analysis/createNewStep', {
      method: 'POST',
        body:data
    }).then(function(response) {
        return response.json();
    }).then(function(myJson) {
      if(myJson.status == 'OK') {
      document.location.reload(true);
      } else {
      $('#my-message').innerHTML = "cannot set a new step with an empty name"
      }
        $("#my-popup").modal();
      })  
}

//the following are operations functions

function deletecomments() {
    var out = document.querySelector("#output123");
    out.innerHTML = "<pre> Loading... please wait </pre>";
    var currentcode = gatherCode();
    var data = new FormData();
    data.append('input', currentcode);
    fetch('/api/actions/deleteComments', {
        method: 'POST',
        body:data
    }).then(function(response) {
        return response.json();
    }).then(function(myJson) {
        if(myJson.status == 'OK') {
            out.innerHTML = "<pre style=\"background:grey;\">"+myJson.output+"</pre>";
        } else {
            out.innerHTML = "<pre>an error occured!</pre>";
        }
    })     
}


function loadStep() {
    var stepList = $('#step-list');
    var stepToLoad = stepList[0].value;
    console.log(stepToLoad);
    var myUrl = '/api/analysis/AnalysisStep/' + analysisId + '/' + stepToLoad;  
    fetch(myUrl)
      .then(function(response) {
        return response.json();
      })
      .then(function(myJson) {
        console.log(myJson);
        if(myJson.status == 'OK') {
            mainEditor.doc.setValue(myJson.code);
        } else {
            console.log("an error occured!");
        }
      })      
}

function newOperation() {
    var out = document.querySelector("#output123");
    out.innerHTML = "<pre style=\"background:grey;\"> Loading... please wait </pre>";      
    var operation = $('#operation-select')[0].value;
    var code = gatherCode();
    var setNewStep = $('#operation-save-step')[0].checked;  
    var data = new FormData();
    data.append('operation', operation);
    data.append('code', code);
    data.append('setnewstep', setNewStep);
    data.append('analysisId',analysisId);
    fetch('/api/actions/newOperation', {
      method: 'POST',
      body: data
    }).then(function(response) {
        return response.json();
    }).then(function(myJson) {
      if(myJson.status == 'OK') {
      if(setNewStep){
            window.location.reload();
      } else {
        out.innerHTML = "<textarea id=\"operation-output\">"+myJson.output+"</textarea><div class=\"row\"><div class=\"col-9\"></div><div class=\"col-2\"><br><button type=\"button\" class=\"btn btn-primary\" onclick=\"setNewStepFromOperation()\">keep as a new step</button></div><div class=\"col-1\"><br><button type=\"button\" class=\"btn btn-primary\" onclick=\"discardOperation()\">discard</button></div></div>";
        lastOperation = operation;
        var opeOut = document.querySelector("#operation-output");
        console.log(opeOut);
        opeEditor = CodeMirror.fromTextArea(opeOut, {
           lineNumbers: true,
           theme: "material",
           #if($analysis_language == "VBA")
             mode: "vb"
           #else
             mode: "javascript"
           #end
         });
      }
        
        } else {
            out.innerHTML = "<pre style=\"background:grey;\">an error occured!</pre>";
        }
    })     
    event.preventDefault();  
        }

function discardOperation() {
   var out = document.querySelector("#output123");
        out.innerHTML = "";
}

function gatherOperationCode() {
    return opeEditor.getValue();
}    

function setNewStepFromOperation() {
    var stepCode = gatherOperationCode();
    var data = new FormData();
    data.append('code', stepCode);
    data.append('name',"post "+ lastOperation);
    data.append('analysisId',analysisId);
    fetch('/api/analysis/createNewStep', {
      method: 'POST',
        body:data
    }).then(function(response) {
        return response.json();
    }).then(function(myJson) {
      if(myJson.status == 'OK') {
      document.location.reload(true);
      } 
      $("#my-popup").modal();
      })  
}            
      
</script>
</body>
</html>
